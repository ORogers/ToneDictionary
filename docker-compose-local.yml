version: '3'

services:

  td-frontend:
    image: orogers/td-frontend:v0.3.0
    ports:
      - "3000:3000"
  


  td-api:
    image: orogers/td-api:v0.2.0
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - "/opt/tonedictionary/media:/opt/tonedictionary/media"
    depends_on: 
      - "mongodb"
    environment:
      - MONGODBURL=mongodb://mongodb:27017

  gateway:
    image: orogers/td-gateway:v0.0.1
    volumes: 
      - ./nginx:/etc/nginx/conf.d
      - /opt/tonedictionary/media:/www/media
    depends_on: 
      - "td-frontend"
      - "td-api"
    ports:
      - "80:80"


  mongodb:
    image: mongo
    volumes:
      - /opt/mongo-volume:/data/db
    ports:
      - "27017:27017" 
 

##ELK Stack - uncomment to deploy monitoring stack
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
#    environment: 
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#    networks:
#     - logging-network
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.1.1
#    depends_on:
#      - filebeat
#    ports: 
#      - 5601:5601
#    networks:
#      - logging-network
#   
#  filebeat:
#    image: "docker.elastic.co/beats/filebeat:7.2.0"
#    user: root
#    volumes:
#      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
#      - /var/lib/docker:/var/lib/docker:ro
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - logging-network
#
#networks: 
#  logging-network:
#    driver: bridge
#
  

